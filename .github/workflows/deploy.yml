name: Deploy to EKS

on:
  push:
    branches: [main]  # Trigger on push to the main branch

env:
  AWS_REGION: us-west-1
  ECR_REPOSITORY: non-prod/go-dragon
  EKS_CLUSTER_NAME: go-dragon-ng
  ROLE_ARN: arn:aws:iam::469834453210:role/github-actions-role
  DEPLOYMENT_NAME: go-dragon
  AWS_ACCOUNT_ID: 469834453210  # Move this to secrets if sensitive

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write  # Request JWT token for authentication
      contents: read   # Required for actions/checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t ${{ env.ECR_REPOSITORY }}:latest .

      - name: Push Docker image to ECR
        run: |
          docker tag ${{ env.ECR_REPOSITORY }}:latest ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}

      - name: Deploy to EKS
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} -n kubesystem go-dragon=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:latest
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }} -n kubesystem
